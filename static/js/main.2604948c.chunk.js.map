{"version":3,"sources":["logo.svg","components/date.js","components/column.js","assets/data.js","App.js","reportWebVitals.js","index.js"],"names":["DateCom","e","info","data","className","animation","y","opacity","playScale","style","transform","month","day","count","content","width","borderBottom","margin","Foodcolumn","date","weather","TweenOne","plugins","push","SvgDrawPlugin","ScrollOverPack","ScrollAnim","OverPack","scrollScreen","App","windowheight","document","documentElement","clientHeight","useState","linedata","mypath","path","useEffect","replay","height","type","interval","duration","leaveReverse","version","display","SVGDraw","fill","strokeWidth","stroke","component","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2604948c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import '../App.css';\r\nimport  Texty from 'rc-texty';\r\nimport { Parallax } from 'rc-scroll-anim';\r\n// import ScrollAnim from 'rc-scroll-anim';\r\n\r\n\r\nfunction DateCom(e){\r\n    let info = e.data\r\n    var month = '11'\r\n    var day = '4'\r\n    var count = '四'\r\n    var weather = 'sunny'\r\n    var content = '特意穿了白色衣服'\r\n    return(\r\n        <Parallax  className='dateP1'\r\n          animation={{ y: 0, opacity: 1, playScale: [0.5, 0.8] }}\r\n          style={{ transform: 'translateY(20px)', opacity: 0 }}\r\n        ><div >{info.month}月{info.day}日</div> \r\n        <div >第{info.count}次见面</div> \r\n        <div >{info.content}</div>\r\n        <div style={{width:'100%',borderBottom:'solid',margin:'12px'}}/></Parallax>\r\n    )\r\n}\r\n\r\nexport default DateCom","import '../App.css';\r\n// import  Texty from 'rc-texty';\r\nimport {Column} from '@antv/g2plot';\r\nimport { useEffect } from 'react';\r\n// import ScrollAnim from 'rc-scroll-anim';\r\n\r\nconst data =[\r\n    {\r\n        Type: \"螺蛳粉\",\r\n        Count: 8\r\n    },\r\n    {\r\n      Type: \"烤肉\",\r\n        Count: 7\r\n    },\r\n    {\r\n        Type: \"面条\",\r\n        Count: 5\r\n    },\r\n    {\r\n        Type: \"米线\",\r\n        Count: 5\r\n    },\r\n    {\r\n        Type: \"烤串\",\r\n        Count: 4\r\n    }\r\n  ]\r\n\r\n  const colors = ['#F14456','#2149DF','#1BBC6B']\r\n\r\nfunction Foodcolumn(){\r\n\r\n    useEffect(() => {\r\n        const columnPlot = new Column('lineCon', {\r\n            data,\r\n            xField: 'Type',\r\n            yField: 'Count',\r\n            label: {\r\n              \r\n              position: 'middle', // 'top', 'bottom', 'middle',\r\n              \r\n            },\r\n            xAxis: {\r\n              label: {\r\n                autoHide: true,\r\n                autoRotate: false,\r\n              },\r\n              \r\n            },\r\n            color: ({ Type }) => {\r\n              if (Type === '螺蛳粉') {\r\n                return colors[0];\r\n              }\r\n              return colors[1];\r\n            },\r\n            meta:{\r\n          \r\n            },\r\n          });\r\n          \r\n          columnPlot.render();\r\n    })\r\n    return(\r\n        <div id=\"lineCon\"></div>\r\n    )\r\n}\r\n\r\nexport default Foodcolumn","const date = [\r\n    {\r\n        month:'01',\r\n        day:'07',\r\n        count:'三',\r\n        weather:'sunny',\r\n        content:'今天特意都穿了白衣服'\r\n    },\r\n    {\r\n        month:'02',\r\n        day:'27',\r\n        count:'十六',\r\n        weather:'cloud',\r\n        content:'八大处到底有几处？'\r\n    },\r\n    {\r\n        month:'04',\r\n        day:'05',\r\n        count:'二十八',\r\n        weather:'cloud',\r\n        content:'本来都准备不吃了呢'\r\n    },\r\n    {\r\n        month:'06',\r\n        day:'30',\r\n        count:'五十',\r\n        weather:'sunny',\r\n        content:'说话能不能讲点理'\r\n    },\r\n    {\r\n        month:'09',\r\n        day:'27',\r\n        count:'六十五',\r\n        weather:'cloud',\r\n        content:'吃完烤肉刘，重走小黑路'\r\n    },\r\n    {\r\n        month:'10',\r\n        day:'31',\r\n        count:'七十三',\r\n        weather:'sunny',\r\n        content:'007怎么就死了呢？！'\r\n    },\r\n]\r\n\r\nexport default {date}","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n//自设组件\nimport DateCom from \"./components/date\";\nimport Foodcolumn from \"./components/column\";\n//动画库\nimport Texty from \"rc-texty\";\nimport ScrollAnim from \"rc-scroll-anim\";\nimport TweenOne from \"rc-tween-one\";\nimport QueueAnim from \"rc-queue-anim\";\nimport SvgDrawPlugin from \"rc-tween-one/lib/plugin/SvgDrawPlugin\";\nimport { Parallax } from \"rc-scroll-anim\";\n// import backimg from './assets/example.png'\nimport data from \"./assets/data\";\nimport { center } from \"@antv/g2plot/lib/plots/sankey/sankey\";\nTweenOne.plugins.push(SvgDrawPlugin);\n//资源\n\n// import { Line,Column} from '@antv/g2plot';\nconst ScrollOverPack = ScrollAnim.OverPack;\nconst scrollScreen = ScrollAnim.scrollScreen;\n\nconst colors = [\"#F14456\", \"#2149DF\", \"#1BBC6B\"];\n\nfunction Mycontent() {\n  return (\n    // <Texty>How many times?</Texty>\n    <h4>How many times?</h4>\n  );\n}\n\nfunction App() {\n  const windowheight = document.documentElement.clientHeight;\n  const [mode, setMode] = useState(null);\n  const [linedata, setlinedata] = useState(\"30% 70%\");\n  const mypath = [\n    \"M541.5,36.45313c-5,6 -8,100 -95,128c-87,28 -66,32 -173,37c-107,5 -143,106 -139,146\",\n    \"M10,10c65,50,115,50,180,0\",\n  ];\n  const [path, setpath] = useState(mypath[1]);\n  //入场动画参数\n  const entryType = \"bottom\";\n  const entryInterval = 500;\n  const entryDuration = 800;\n\n  useEffect(() => {});\n\n  function gundaole(e) {\n    // console.log(e)\n    if (e === \"enter\") {\n      setMode(\"enter\");\n      setlinedata(\"100%\");\n    } else {\n      setlinedata(0);\n    }\n    console.log(linedata);\n  }\n\n  function setline() {\n    // setlinedata('50% 50%')\n    setpath(mypath[0]);\n  }\n  return (\n    <div className=\"App\" style={{}}>\n      {/* P0 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{\n          height: windowheight,\n          // dispaly: \"flex\",\n          // alignItems: \"center\",\n          // justifyContent: \"center\",\n        }}\n      >\n        <QueueAnim\n          type={entryType}\n          interval={entryInterval}\n          duration={entryDuration}\n          leaveReverse\n        >\n          <div key=\"1\">\n            {\" \"}\n            <Texty>今天是我们第几次见面？</Texty>\n          </div>\n          <div key=\"2\">\n            <Texty>How many times have we met this year?</Texty>\n          </div>\n        </QueueAnim>\n      </ScrollOverPack>\n      {/* P1 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[0]} />\n\n      </ScrollOverPack>\n      {/* P2 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[1]} />\n\n        <svg\n          width=\"200\"\n          height=\"84\"\n          version=\"1.2\"\n          style={{ display: \"block\", margin: \"auto\" }}\n        >\n          <TweenOne\n            animation={{ SVGDraw: linedata, duration: 500 }}\n            style={{ fill: \"none\", strokeWidth: 10, stroke: \"#FFF\" }}\n            component=\"path\"\n            d={path}\n          />\n        </svg>\n      </ScrollOverPack>\n      {/* P3 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[2]} />\n      </ScrollOverPack>\n      {/* P4 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[3]} />\n      </ScrollOverPack>\n      {/* P5 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[4]} />\n      </ScrollOverPack>\n      {/* P6 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <DateCom data={data.date[5]} />\n      </ScrollOverPack>\n      {/* P7 */}\n      <ScrollOverPack\n        replay\n        className=\"container\"\n        style={{ height: windowheight }}\n      >\n        <Texty>100咯</Texty>\n      </ScrollOverPack>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}