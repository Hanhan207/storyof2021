{"version":3,"sources":["logo.svg","components/date.js","App.js","reportWebVitals.js","index.js"],"names":["DateCom","className","ScrollOverPack","ScrollAnim","OverPack","data","scrollScreen","Type","Count","colors","App","windowheight","document","documentElement","clientHeight","useEffect","Column","xField","yField","label","position","xAxis","autoHide","autoRotate","color","meta","render","style","height","id","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+MAAe,I,sBCWAA,MANf,WACI,OAAO,8BACH,cAAC,IAAD,CAAOC,UAAU,SAAjB,oD,kBCAFC,EAAiBC,IAAWC,SAK5BC,GAJeF,IAAWG,aAIpB,CACV,CACIC,KAAM,qBACNC,MAAO,GAEX,CACED,KAAM,eACJC,MAAO,GAEX,CACID,KAAM,eACNC,MAAO,GAEX,CACID,KAAM,eACNC,MAAO,GAEX,CACID,KAAM,eACNC,MAAO,KAIPC,EAAS,CAAC,UAAU,UAAU,WAuErBC,MArEf,WAEE,IAAMC,EAAeC,SAASC,gBAAgBC,aAyC9C,OApCAC,qBAAU,WAEO,IAAIC,SAAO,UAAW,CACvCX,OACAY,OAAQ,OACRC,OAAQ,QACRC,MAAO,CAELC,SAAU,UAOZC,MAAO,CACLF,MAAO,CACLG,UAAU,EACVC,YAAY,IAIhBC,MAAO,YACL,MAAa,uBADM,EAAXjB,KAECE,EAAO,GAETA,EAAO,IAEhBgB,KAAK,KAKIC,YAIP,sBAAKzB,UAAU,MAAf,UAEE,eAACC,EAAD,CAAgBD,UAAU,YAAa0B,MAAO,CAACC,OAAoB,GAAbjB,GAAtD,UACA,cAAC,IAAD,CAAOV,UAAU,UAAjB,kDACA,qBAAK4B,GAAG,eAER,eAAC3B,EAAD,CAAgBD,UAAU,YAAa0B,MAAO,CAACC,OAAoB,GAAbjB,EAAiBmB,WAAWrB,EAAO,IAAzF,UACA,cAAC,IAAD,CAAOR,UAAU,UAAjB,kDACA,cAAC,EAAD,OAEA,cAACC,EAAD,CAAgBD,UAAU,YAAa0B,MAAO,CAACC,OAAoB,GAAbjB,EAAiBmB,WAAWrB,EAAO,IAAzF,SAEA,cAAC,EAAD,MAEA,eAACP,EAAD,CAAgBD,UAAU,YAAa0B,MAAO,CAACC,OAAoB,GAAbjB,EAAiBmB,WAAWrB,EAAO,IAAzF,UAEA,cAAC,IAAD,CAAOR,UAAU,UAAjB,kDAEA,cAAC,IAAD,CAAOA,UAAU,UAAjB,yDCvFS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BX,M","file":"static/js/main.83457064.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import '../App.css';\r\nimport  Texty from 'rc-texty';\r\n// import ScrollAnim from 'rc-scroll-anim';\r\n\r\n\r\nfunction DateCom(){\r\n    return(<div>\r\n        <Texty className='dateP1'>11月04日 第四次</Texty>\r\n    </div>)\r\n}\r\n\r\nexport default DateCom","import logo from './logo.svg';\nimport './App.css';\nimport DateCom from './components/date'\nimport  Texty from 'rc-texty';\nimport ScrollAnim from 'rc-scroll-anim';\nimport { useEffect } from 'react';\nimport { Line,Column} from '@antv/g2plot';\nconst ScrollOverPack = ScrollAnim.OverPack;\nconst scrollScreen = ScrollAnim.scrollScreen\n\n\n\nconst data =[\n  {\n      Type: \"螺蛳粉\",\n      Count: 8\n  },\n  {\n    Type: \"烤肉\",\n      Count: 7\n  },\n  {\n      Type: \"面条\",\n      Count: 5\n  },\n  {\n      Type: \"米线\",\n      Count: 5\n  },\n  {\n      Type: \"烤串\",\n      Count: 4\n  }\n]\n\nconst colors = ['#F14456','#2149DF','#1BBC6B']\n\nfunction App() {\n  \n  const windowheight = document.documentElement.clientHeight\n  // scrollScreen.init({\n  //   docHeight:windowheight*2.4\n  // })\n\n  useEffect(() => {\n    \nconst columnPlot = new Column('lineCon', {\n  data,\n  xField: 'Type',\n  yField: 'Count',\n  label: {\n    // 可手动配置 label 数据标签位置\n    position: 'middle', // 'top', 'bottom', 'middle',\n    // 配置样式\n    // style: {\n    //   fill: '#FFFFFF',\n    //   opacity: 0.6,\n    // },\n  },\n  xAxis: {\n    label: {\n      autoHide: true,\n      autoRotate: false,\n    },\n    \n  },\n  color: ({ Type }) => {\n    if (Type === '螺蛳粉') {\n      return colors[0];\n    }\n    return colors[1];\n  },\n  meta:{\n\n  },\n});\n\ncolumnPlot.render();\n\n  })\n  return (\n    <div className=\"App\">\n      \n      <ScrollOverPack className='container'  style={{height:windowheight*0.6}}>\n      <Texty className='titleP0'>How many time have we met this year?</Texty>\n      <div id=\"lineCon\"></div>\n      </ScrollOverPack>\n      <ScrollOverPack className='container'  style={{height:windowheight*0.6,background:colors[2]}}>\n      <Texty className='titleP0'>How many time have we met this year?</Texty>\n      <DateCom/>\n      </ScrollOverPack>\n      <ScrollOverPack className='container'  style={{height:windowheight*0.6,background:colors[1]}}>\n      \n      <DateCom/>\n      </ScrollOverPack>\n      <ScrollOverPack className='container'  style={{height:windowheight*0.6,background:colors[0]}}>\n      \n      <Texty className='titleP0'>How many time have we met this year?</Texty>\n      \n      <Texty className='titleP0'>How many time have we met this year?</Texty>\n      </ScrollOverPack>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}